{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","shared/util/validators.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","user/pages/Auth.js"],"names":["Button","props","href","React","createElement","className","concat","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","ErrorModal","Modal","onCancel","onClear","header","show","error","footer","ModalOverlay","content","style","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Fragment","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","isLoading","setisLoading","useState","setError","activeHttpRequest","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","responseData","json","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Card","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","test","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","id","ref","display","accept","onChange","pickedFile","fileIsValid","target","files","onInput","center","src","alt","pickImageHandler","click","errorText","inputReducer","state","action","isTouched","Input","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","element","placeholder","onBlur","rows","htmlFor","label","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","inputHandler","setFormData","email","password","LoadingSpinner","asOverlay","process","JSON","stringify","Accept","login","user","_id","token","formData","FormData","append","name","image","switchModeHandler","prevMode"],"mappings":"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","file":"static/js/3.66e0d5f2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button--inverse\"\r\n        } ${props.danger && \"button--danger\"}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button--inverse\"\r\n        } ${props.danger && \"button--danger\"}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || \"default\"} ${\r\n        props.inverse && \"button--inverse\"\r\n      } ${props.danger && \"button--danger\"}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../FormElements/Button\";\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequest = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setisLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequest.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequest.current = activeHttpRequest.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) throw new Error(responseData.message);\r\n\r\n        setisLoading(false);\r\n        return responseData;\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setisLoading(false);\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => setError(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequest.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case 'TOUCH': {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH'\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\r\n        'form-control--invalid'}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};","import React, { useState, useContext } from \"react\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport \"./Auth.css\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_USERS_URL}/login`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.login(responseData.user._id, responseData.token);\r\n      } catch (error) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_USERS_URL}/signup`,\r\n          \"POST\",\r\n          formData\r\n        );\r\n        auth.login(responseData.user._id, responseData.token);\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload\r\n              center\r\n              id=\"image\"\r\n              onInput={inputHandler}\r\n              errorText=\"Please provide an image\"\r\n            />\r\n          )}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid password, at least 5 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"sourceRoot":""}