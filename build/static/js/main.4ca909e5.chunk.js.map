{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/hooks/auth-hook.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","React","createElement","className","concat","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","MainHeader","children","NavLinks","auth","useContext","NavLink","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","drawerIsOpen","setDrawerIsOpen","useState","closeDrawerHandler","Fragment","openDrawerHandler","Link","logoutTimer","Users","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","useAuth","setToken","setuserId","tokenExpirationDate","settokenExpirationDate","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","userID","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearInterval","storedData","parse","getItem","routes","Switch","Route","path","Redirect","Provider","value","Router","Suspense","fallback","render"],"mappings":"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","file":"static/js/main.4ca909e5.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./Backdrop.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById(\"backdrop-hook\")\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport \"./NavLinks.css\";\r\n\r\nconst NavLinks = (props) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nconst SideDrawer = (props) => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\nimport \"./MainNavigation.css\";\r\n\r\nconst MainNavigation = (props) => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n\r\n      <MainHeader>\r\n        <button\r\n          className=\"main-navigation__menu-btn\"\r\n          onClick={openDrawerHandler}\r\n        >\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">YourPlaces</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [userId, setuserId] = useState();\r\n  const [tokenExpirationDate, settokenExpirationDate] = useState();\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setuserId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    settokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userID: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(false);\r\n    settokenExpirationDate(null);\r\n    setuserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearInterval(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expirationDate) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expirationDate)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n};\r\n","import React, { Suspense } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n// import Users from \"./user/pages/Users\";\r\n// import NewPlace from \"./places/pages/NewPlace\";\r\n// import UserPlaces from \"./places/pages/UserPlaces\";\r\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\r\n// import Auth from \"./user/pages/Auth\";\r\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\r\nimport { AuthContext } from \"./shared/context/auth-context\";\r\nimport { useAuth } from \"./shared/hooks/auth-hook\";\r\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst Users = React.lazy(() => import(\"./user/pages/Users\"));\r\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\r\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\r\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\r\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\r\n\r\nconst App = () => {\r\n  const { token, login, logout, userId } = useAuth();\r\n  let routes;\r\n\r\n  if (token) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/places/new\" exact>\r\n          <NewPlace />\r\n        </Route>\r\n        <Route path=\"/places/:placeId\">\r\n          <UpdatePlace />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/auth\">\r\n          <Auth />\r\n        </Route>\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: !!token,\r\n        token: token,\r\n        userId: userId,\r\n        login: login,\r\n        logout: logout,\r\n      }}\r\n    >\r\n      <Router>\r\n        <MainNavigation />\r\n        <main>\r\n          <Suspense\r\n            fallback={\r\n              <div className=\"center\">\r\n                <LoadingSpinner />\r\n              </div>\r\n            }\r\n          >\r\n            {routes}\r\n          </Suspense>\r\n        </main>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}