{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","shared/components/FormElements/ImageUpload.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"names":["Button","props","href","React","createElement","className","concat","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","ErrorModal","Modal","onCancel","onClear","header","show","error","footer","ModalOverlay","content","style","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Fragment","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","isLoading","setisLoading","useState","setError","activeHttpRequest","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","responseData","json","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Card","ImageUpload","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","id","ref","display","accept","onChange","pickedFile","fileIsValid","target","files","onInput","center","src","alt","pickImageHandler","click","errorText","Avatar","image","width","height","UserItem","process","name","placeCount","UsersList","items","map","user","key","_id","places","Users","loadedUsers","setLoadedUsers","users","err","fetchUsers","LoadingSpinner"],"mappings":"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","file":"static/js/6.f2333900.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button--inverse\"\r\n        } ${props.danger && \"button--danger\"}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button--inverse\"\r\n        } ${props.danger && \"button--danger\"}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || \"default\"} ${\r\n        props.inverse && \"button--inverse\"\r\n      } ${props.danger && \"button--danger\"}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../FormElements/Button\";\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequest = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setisLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequest.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequest.current = activeHttpRequest.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) throw new Error(responseData.message);\r\n\r\n        setisLoading(false);\r\n        return responseData;\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setisLoading(false);\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => setError(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequest.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React from 'react';\r\n\r\nimport './Avatar.css';\r\n\r\nconst Avatar = props => {\r\n  return (\r\n    <div className={`avatar ${props.className}`} style={props.style}>\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        style={{ width: props.width, height: props.width }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./UserItem.css\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nconst UserItem = (props) => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar\r\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.name}\r\n            />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\n\r\nimport UserItem from \"./UserItem\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./UsersList.css\";\r\n\r\nconst UsersList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No users found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.items.map((user) => (\r\n        <UserItem\r\n          key={user._id}\r\n          id={user._id}\r\n          image={user.image}\r\n          name={user.name}\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport UsersList from \"../components/UsersList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Users = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_USERS_URL}`\r\n        );\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}